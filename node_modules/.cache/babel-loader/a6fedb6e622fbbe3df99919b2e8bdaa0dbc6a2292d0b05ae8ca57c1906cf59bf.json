{"ast":null,"code":"import _objectSpread from\"C:/Users/usman/.cursor/alzense/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";const STORAGE_KEYS={SESSIONS:'alzense_sessions',CALM_ZONES:'alzense_calm_zones',STRESS_ZONES:'alzense_stress_zones',APP_STATE:'alzense_app_state'};export class StorageService{// Sessions\nstatic saveSessions(sessions){try{localStorage.setItem(STORAGE_KEYS.SESSIONS,JSON.stringify(sessions));}catch(error){console.error('Failed to save sessions:',error);}}static loadSessions(){try{const data=localStorage.getItem(STORAGE_KEYS.SESSIONS);return data?JSON.parse(data):[];}catch(error){console.error('Failed to load sessions:',error);return[];}}static addSession(session){const sessions=this.loadSessions();sessions.push(session);this.saveSessions(sessions);}static updateSession(session){const sessions=this.loadSessions();const index=sessions.findIndex(s=>s.id===session.id);if(index!==-1){sessions[index]=session;this.saveSessions(sessions);}}// Calm Zones\nstatic saveCalmZones(zones){try{localStorage.setItem(STORAGE_KEYS.CALM_ZONES,JSON.stringify(zones));}catch(error){console.error('Failed to save calm zones:',error);}}static loadCalmZones(){try{const data=localStorage.getItem(STORAGE_KEYS.CALM_ZONES);return data?JSON.parse(data):[];}catch(error){console.error('Failed to load calm zones:',error);return[];}}// Stress Zones\nstatic saveStressZones(zones){try{localStorage.setItem(STORAGE_KEYS.STRESS_ZONES,JSON.stringify(zones));}catch(error){console.error('Failed to save stress zones:',error);}}static loadStressZones(){try{const data=localStorage.getItem(STORAGE_KEYS.STRESS_ZONES);return data?JSON.parse(data):[];}catch(error){console.error('Failed to load stress zones:',error);return[];}}// App State\nstatic saveAppState(state){try{const currentState=this.loadAppState();const newState=_objectSpread(_objectSpread({},currentState),state);localStorage.setItem(STORAGE_KEYS.APP_STATE,JSON.stringify(newState));}catch(error){console.error('Failed to save app state:',error);}}static loadAppState(){try{const data=localStorage.getItem(STORAGE_KEYS.APP_STATE);return data?JSON.parse(data):{};}catch(error){console.error('Failed to load app state:',error);return{};}}// Export data\nstatic exportData(){const data={sessions:this.loadSessions(),calmZones:this.loadCalmZones(),stressZones:this.loadStressZones(),exportDate:new Date().toISOString(),version:'1.0.0'};return JSON.stringify(data,null,2);}// Clear all data\nstatic clearAllData(){Object.values(STORAGE_KEYS).forEach(key=>{localStorage.removeItem(key);});}}","map":{"version":3,"names":["STORAGE_KEYS","SESSIONS","CALM_ZONES","STRESS_ZONES","APP_STATE","StorageService","saveSessions","sessions","localStorage","setItem","JSON","stringify","error","console","loadSessions","data","getItem","parse","addSession","session","push","updateSession","index","findIndex","s","id","saveCalmZones","zones","loadCalmZones","saveStressZones","loadStressZones","saveAppState","state","currentState","loadAppState","newState","_objectSpread","exportData","calmZones","stressZones","exportDate","Date","toISOString","version","clearAllData","Object","values","forEach","key","removeItem"],"sources":["C:/Users/usman/.cursor/alzense/src/services/storage.ts"],"sourcesContent":["import { WalkSession, CalmZone, StressZone, AppState } from '../types';\r\n\r\nconst STORAGE_KEYS = {\r\n  SESSIONS: 'alzense_sessions',\r\n  CALM_ZONES: 'alzense_calm_zones',\r\n  STRESS_ZONES: 'alzense_stress_zones',\r\n  APP_STATE: 'alzense_app_state'\r\n};\r\n\r\nexport class StorageService {\r\n  // Sessions\r\n  static saveSessions(sessions: WalkSession[]): void {\r\n    try {\r\n      localStorage.setItem(STORAGE_KEYS.SESSIONS, JSON.stringify(sessions));\r\n    } catch (error) {\r\n      console.error('Failed to save sessions:', error);\r\n    }\r\n  }\r\n\r\n  static loadSessions(): WalkSession[] {\r\n    try {\r\n      const data = localStorage.getItem(STORAGE_KEYS.SESSIONS);\r\n      return data ? JSON.parse(data) : [];\r\n    } catch (error) {\r\n      console.error('Failed to load sessions:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  static addSession(session: WalkSession): void {\r\n    const sessions = this.loadSessions();\r\n    sessions.push(session);\r\n    this.saveSessions(sessions);\r\n  }\r\n\r\n  static updateSession(session: WalkSession): void {\r\n    const sessions = this.loadSessions();\r\n    const index = sessions.findIndex(s => s.id === session.id);\r\n    if (index !== -1) {\r\n      sessions[index] = session;\r\n      this.saveSessions(sessions);\r\n    }\r\n  }\r\n\r\n  // Calm Zones\r\n  static saveCalmZones(zones: CalmZone[]): void {\r\n    try {\r\n      localStorage.setItem(STORAGE_KEYS.CALM_ZONES, JSON.stringify(zones));\r\n    } catch (error) {\r\n      console.error('Failed to save calm zones:', error);\r\n    }\r\n  }\r\n\r\n  static loadCalmZones(): CalmZone[] {\r\n    try {\r\n      const data = localStorage.getItem(STORAGE_KEYS.CALM_ZONES);\r\n      return data ? JSON.parse(data) : [];\r\n    } catch (error) {\r\n      console.error('Failed to load calm zones:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  // Stress Zones\r\n  static saveStressZones(zones: StressZone[]): void {\r\n    try {\r\n      localStorage.setItem(STORAGE_KEYS.STRESS_ZONES, JSON.stringify(zones));\r\n    } catch (error) {\r\n      console.error('Failed to save stress zones:', error);\r\n    }\r\n  }\r\n\r\n  static loadStressZones(): StressZone[] {\r\n    try {\r\n      const data = localStorage.getItem(STORAGE_KEYS.STRESS_ZONES);\r\n      return data ? JSON.parse(data) : [];\r\n    } catch (error) {\r\n      console.error('Failed to load stress zones:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  // App State\r\n  static saveAppState(state: Partial<AppState>): void {\r\n    try {\r\n      const currentState = this.loadAppState();\r\n      const newState = { ...currentState, ...state };\r\n      localStorage.setItem(STORAGE_KEYS.APP_STATE, JSON.stringify(newState));\r\n    } catch (error) {\r\n      console.error('Failed to save app state:', error);\r\n    }\r\n  }\r\n\r\n  static loadAppState(): Partial<AppState> {\r\n    try {\r\n      const data = localStorage.getItem(STORAGE_KEYS.APP_STATE);\r\n      return data ? JSON.parse(data) : {};\r\n    } catch (error) {\r\n      console.error('Failed to load app state:', error);\r\n      return {};\r\n    }\r\n  }\r\n\r\n  // Export data\r\n  static exportData(): string {\r\n    const data = {\r\n      sessions: this.loadSessions(),\r\n      calmZones: this.loadCalmZones(),\r\n      stressZones: this.loadStressZones(),\r\n      exportDate: new Date().toISOString(),\r\n      version: '1.0.0'\r\n    };\r\n    return JSON.stringify(data, null, 2);\r\n  }\r\n\r\n  // Clear all data\r\n  static clearAllData(): void {\r\n    Object.values(STORAGE_KEYS).forEach(key => {\r\n      localStorage.removeItem(key);\r\n    });\r\n  }\r\n}\r\n"],"mappings":"mHAEA,KAAM,CAAAA,YAAY,CAAG,CACnBC,QAAQ,CAAE,kBAAkB,CAC5BC,UAAU,CAAE,oBAAoB,CAChCC,YAAY,CAAE,sBAAsB,CACpCC,SAAS,CAAE,mBACb,CAAC,CAED,MAAO,MAAM,CAAAC,cAAe,CAC1B;AACA,MAAO,CAAAC,YAAYA,CAACC,QAAuB,CAAQ,CACjD,GAAI,CACFC,YAAY,CAACC,OAAO,CAACT,YAAY,CAACC,QAAQ,CAAES,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC,CAAC,CACvE,CAAE,MAAOK,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAClD,CACF,CAEA,MAAO,CAAAE,YAAYA,CAAA,CAAkB,CACnC,GAAI,CACF,KAAM,CAAAC,IAAI,CAAGP,YAAY,CAACQ,OAAO,CAAChB,YAAY,CAACC,QAAQ,CAAC,CACxD,MAAO,CAAAc,IAAI,CAAGL,IAAI,CAACO,KAAK,CAACF,IAAI,CAAC,CAAG,EAAE,CACrC,CAAE,MAAOH,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,MAAO,EAAE,CACX,CACF,CAEA,MAAO,CAAAM,UAAUA,CAACC,OAAoB,CAAQ,CAC5C,KAAM,CAAAZ,QAAQ,CAAG,IAAI,CAACO,YAAY,CAAC,CAAC,CACpCP,QAAQ,CAACa,IAAI,CAACD,OAAO,CAAC,CACtB,IAAI,CAACb,YAAY,CAACC,QAAQ,CAAC,CAC7B,CAEA,MAAO,CAAAc,aAAaA,CAACF,OAAoB,CAAQ,CAC/C,KAAM,CAAAZ,QAAQ,CAAG,IAAI,CAACO,YAAY,CAAC,CAAC,CACpC,KAAM,CAAAQ,KAAK,CAAGf,QAAQ,CAACgB,SAAS,CAACC,CAAC,EAAIA,CAAC,CAACC,EAAE,GAAKN,OAAO,CAACM,EAAE,CAAC,CAC1D,GAAIH,KAAK,GAAK,CAAC,CAAC,CAAE,CAChBf,QAAQ,CAACe,KAAK,CAAC,CAAGH,OAAO,CACzB,IAAI,CAACb,YAAY,CAACC,QAAQ,CAAC,CAC7B,CACF,CAEA;AACA,MAAO,CAAAmB,aAAaA,CAACC,KAAiB,CAAQ,CAC5C,GAAI,CACFnB,YAAY,CAACC,OAAO,CAACT,YAAY,CAACE,UAAU,CAAEQ,IAAI,CAACC,SAAS,CAACgB,KAAK,CAAC,CAAC,CACtE,CAAE,MAAOf,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CACpD,CACF,CAEA,MAAO,CAAAgB,aAAaA,CAAA,CAAe,CACjC,GAAI,CACF,KAAM,CAAAb,IAAI,CAAGP,YAAY,CAACQ,OAAO,CAAChB,YAAY,CAACE,UAAU,CAAC,CAC1D,MAAO,CAAAa,IAAI,CAAGL,IAAI,CAACO,KAAK,CAACF,IAAI,CAAC,CAAG,EAAE,CACrC,CAAE,MAAOH,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClD,MAAO,EAAE,CACX,CACF,CAEA;AACA,MAAO,CAAAiB,eAAeA,CAACF,KAAmB,CAAQ,CAChD,GAAI,CACFnB,YAAY,CAACC,OAAO,CAACT,YAAY,CAACG,YAAY,CAAEO,IAAI,CAACC,SAAS,CAACgB,KAAK,CAAC,CAAC,CACxE,CAAE,MAAOf,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACtD,CACF,CAEA,MAAO,CAAAkB,eAAeA,CAAA,CAAiB,CACrC,GAAI,CACF,KAAM,CAAAf,IAAI,CAAGP,YAAY,CAACQ,OAAO,CAAChB,YAAY,CAACG,YAAY,CAAC,CAC5D,MAAO,CAAAY,IAAI,CAAGL,IAAI,CAACO,KAAK,CAACF,IAAI,CAAC,CAAG,EAAE,CACrC,CAAE,MAAOH,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACpD,MAAO,EAAE,CACX,CACF,CAEA;AACA,MAAO,CAAAmB,YAAYA,CAACC,KAAwB,CAAQ,CAClD,GAAI,CACF,KAAM,CAAAC,YAAY,CAAG,IAAI,CAACC,YAAY,CAAC,CAAC,CACxC,KAAM,CAAAC,QAAQ,CAAAC,aAAA,CAAAA,aAAA,IAAQH,YAAY,EAAKD,KAAK,CAAE,CAC9CxB,YAAY,CAACC,OAAO,CAACT,YAAY,CAACI,SAAS,CAAEM,IAAI,CAACC,SAAS,CAACwB,QAAQ,CAAC,CAAC,CACxE,CAAE,MAAOvB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACnD,CACF,CAEA,MAAO,CAAAsB,YAAYA,CAAA,CAAsB,CACvC,GAAI,CACF,KAAM,CAAAnB,IAAI,CAAGP,YAAY,CAACQ,OAAO,CAAChB,YAAY,CAACI,SAAS,CAAC,CACzD,MAAO,CAAAW,IAAI,CAAGL,IAAI,CAACO,KAAK,CAACF,IAAI,CAAC,CAAG,CAAC,CAAC,CACrC,CAAE,MAAOH,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACjD,MAAO,CAAC,CAAC,CACX,CACF,CAEA;AACA,MAAO,CAAAyB,UAAUA,CAAA,CAAW,CAC1B,KAAM,CAAAtB,IAAI,CAAG,CACXR,QAAQ,CAAE,IAAI,CAACO,YAAY,CAAC,CAAC,CAC7BwB,SAAS,CAAE,IAAI,CAACV,aAAa,CAAC,CAAC,CAC/BW,WAAW,CAAE,IAAI,CAACT,eAAe,CAAC,CAAC,CACnCU,UAAU,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CACpCC,OAAO,CAAE,OACX,CAAC,CACD,MAAO,CAAAjC,IAAI,CAACC,SAAS,CAACI,IAAI,CAAE,IAAI,CAAE,CAAC,CAAC,CACtC,CAEA;AACA,MAAO,CAAA6B,YAAYA,CAAA,CAAS,CAC1BC,MAAM,CAACC,MAAM,CAAC9C,YAAY,CAAC,CAAC+C,OAAO,CAACC,GAAG,EAAI,CACzCxC,YAAY,CAACyC,UAAU,CAACD,GAAG,CAAC,CAC9B,CAAC,CAAC,CACJ,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}