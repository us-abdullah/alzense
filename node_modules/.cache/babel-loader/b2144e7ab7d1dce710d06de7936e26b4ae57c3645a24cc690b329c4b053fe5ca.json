{"ast":null,"code":"import React,{useState}from'react';import{Download,Share2}from'lucide-react';import{StorageService}from'../services/storage';import{format}from'date-fns';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ExportData=()=>{const[isExporting,setIsExporting]=useState(false);const[exportFormat,setExportFormat]=useState('report');const handleExport=async()=>{setIsExporting(true);try{const data=StorageService.exportData();const sessions=StorageService.loadSessions();const calmZones=StorageService.loadCalmZones();const stressZones=StorageService.loadStressZones();if(exportFormat==='json'){downloadFile(data,'alzense-data.json','application/json');}else if(exportFormat==='csv'){const csvData=generateCSV(sessions);downloadFile(csvData,'alzense-sessions.csv','text/csv');}else if(exportFormat==='report'){const reportData=generateReport(sessions,calmZones,stressZones);downloadFile(reportData,'alzense-report.html','text/html');}}catch(error){console.error('Export failed:',error);alert('Export failed. Please try again.');}finally{setIsExporting(false);}};const downloadFile=(content,filename,mimeType)=>{const blob=new Blob([content],{type:mimeType});const url=URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download=filename;document.body.appendChild(link);link.click();document.body.removeChild(link);URL.revokeObjectURL(url);};const generateCSV=sessions=>{const headers=['Session ID','Start Time','End Time','Duration (minutes)','Total Entries','Calm Count','Neutral Count','Stressed Count','Calm Percentage','Neutral Percentage','Stressed Percentage','Average Noise Level','Summary'];const rows=sessions.map(session=>{const duration=session.endTime?(session.endTime-session.startTime)/60000:0;const total=session.moodEntries.length;const calmPct=total>0?(session.calmCount/total*100).toFixed(1):0;const neutralPct=total>0?(session.neutralCount/total*100).toFixed(1):0;const stressedPct=total>0?(session.stressCount/total*100).toFixed(1):0;const avgNoise=session.moodEntries.length>0?(session.moodEntries.reduce((sum,entry)=>sum+entry.noiseLevel,0)/session.moodEntries.length).toFixed(1):0;return[session.id,format(new Date(session.startTime),'yyyy-MM-dd HH:mm:ss'),session.endTime?format(new Date(session.endTime),'yyyy-MM-dd HH:mm:ss'):'In Progress',duration.toFixed(1),total,session.calmCount,session.neutralCount,session.stressCount,calmPct,neutralPct,stressedPct,avgNoise,session.summary||''];});return[headers,...rows].map(row=>row.map(cell=>\"\\\"\".concat(cell,\"\\\"\")).join(',')).join('\\n');};const generateReport=(sessions,calmZones,stressZones)=>{const totalSessions=sessions.length;const completedSessions=sessions.filter(s=>s.endTime).length;const totalCalmZones=calmZones.length;const totalStressZones=stressZones.length;const totalMoodEntries=sessions.reduce((sum,session)=>sum+session.moodEntries.length,0);const totalCalmEntries=sessions.reduce((sum,session)=>sum+session.calmCount,0);const totalStressedEntries=sessions.reduce((sum,session)=>sum+session.stressCount,0);const overallCalmRate=totalMoodEntries>0?(totalCalmEntries/totalMoodEntries*100).toFixed(1):'0';const overallStressRate=totalMoodEntries>0?(totalStressedEntries/totalMoodEntries*100).toFixed(1):'0';return\"\\n<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n    <meta charset=\\\"UTF-8\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n    <title>Alzense Care Report</title>\\n    <style>\\n        body {\\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;\\n            line-height: 1.6;\\n            color: #333;\\n            max-width: 800px;\\n            margin: 0 auto;\\n            padding: 20px;\\n            background-color: #f8fafc;\\n        }\\n        .header {\\n            text-align: center;\\n            margin-bottom: 40px;\\n            padding: 30px;\\n            background: linear-gradient(135deg, #4ade80, #3b82f6);\\n            color: white;\\n            border-radius: 12px;\\n        }\\n        .header h1 {\\n            margin: 0;\\n            font-size: 2.5rem;\\n            font-weight: 700;\\n        }\\n        .header p {\\n            margin: 10px 0 0 0;\\n            font-size: 1.2rem;\\n            opacity: 0.9;\\n        }\\n        .section {\\n            background: white;\\n            padding: 30px;\\n            margin-bottom: 20px;\\n            border-radius: 12px;\\n            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\\n        }\\n        .section h2 {\\n            color: #1e293b;\\n            margin-bottom: 20px;\\n            font-size: 1.5rem;\\n            border-bottom: 2px solid #e5e7eb;\\n            padding-bottom: 10px;\\n        }\\n        .stats-grid {\\n            display: grid;\\n            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\\n            gap: 20px;\\n            margin-bottom: 20px;\\n        }\\n        .stat-card {\\n            text-align: center;\\n            padding: 20px;\\n            background: #f8fafc;\\n            border-radius: 8px;\\n            border: 1px solid #e5e7eb;\\n        }\\n        .stat-number {\\n            font-size: 2rem;\\n            font-weight: 700;\\n            color: #3b82f6;\\n            margin-bottom: 5px;\\n        }\\n        .stat-label {\\n            color: #6b7280;\\n            font-size: 0.9rem;\\n        }\\n        .mood-summary {\\n            display: flex;\\n            justify-content: space-around;\\n            margin: 20px 0;\\n        }\\n        .mood-item {\\n            text-align: center;\\n            padding: 15px;\\n            border-radius: 8px;\\n            min-width: 120px;\\n        }\\n        .mood-calm { background-color: #f0fdf4; color: #166534; }\\n        .mood-neutral { background-color: #fffbeb; color: #92400e; }\\n        .mood-stressed { background-color: #fef2f2; color: #991b1b; }\\n        .mood-emoji { font-size: 2rem; margin-bottom: 10px; }\\n        .mood-percentage { font-size: 1.5rem; font-weight: 700; }\\n        .zone-list {\\n            display: grid;\\n            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\\n            gap: 15px;\\n        }\\n        .zone-item {\\n            padding: 15px;\\n            border-radius: 8px;\\n            border: 1px solid #e5e7eb;\\n        }\\n        .zone-calm {\\n            background-color: #f0fdf4;\\n            border-color: #bbf7d0;\\n        }\\n        .zone-stress {\\n            background-color: #fef2f2;\\n            border-color: #fecaca;\\n        }\\n        .zone-score {\\n            font-size: 1.2rem;\\n            font-weight: 700;\\n            margin-bottom: 5px;\\n        }\\n        .zone-details {\\n            font-size: 0.9rem;\\n            color: #6b7280;\\n        }\\n        .session-item {\\n            padding: 15px;\\n            border: 1px solid #e5e7eb;\\n            border-radius: 8px;\\n            margin-bottom: 10px;\\n            background: #f8fafc;\\n        }\\n        .session-date {\\n            font-weight: 600;\\n            color: #1e293b;\\n            margin-bottom: 5px;\\n        }\\n        .session-stats {\\n            display: flex;\\n            gap: 20px;\\n            font-size: 0.9rem;\\n            color: #6b7280;\\n        }\\n        .footer {\\n            text-align: center;\\n            margin-top: 40px;\\n            padding: 20px;\\n            color: #6b7280;\\n            font-size: 0.9rem;\\n        }\\n    </style>\\n</head>\\n<body>\\n    <div class=\\\"header\\\">\\n        <h1>\\uD83E\\uDDE0 Alzense Care Report</h1>\\n        <p>Generated on \".concat(format(new Date(),'MMMM dd, yyyy'),\"</p>\\n    </div>\\n\\n    <div class=\\\"section\\\">\\n        <h2>\\uD83D\\uDCCA Overall Statistics</h2>\\n        <div class=\\\"stats-grid\\\">\\n            <div class=\\\"stat-card\\\">\\n                <div class=\\\"stat-number\\\">\").concat(totalSessions,\"</div>\\n                <div class=\\\"stat-label\\\">Total Walks</div>\\n            </div>\\n            <div class=\\\"stat-card\\\">\\n                <div class=\\\"stat-number\\\">\").concat(completedSessions,\"</div>\\n                <div class=\\\"stat-label\\\">Completed Walks</div>\\n            </div>\\n            <div class=\\\"stat-card\\\">\\n                <div class=\\\"stat-number\\\">\").concat(totalMoodEntries,\"</div>\\n                <div class=\\\"stat-label\\\">Mood Entries</div>\\n            </div>\\n            <div class=\\\"stat-card\\\">\\n                <div class=\\\"stat-number\\\">\").concat(totalCalmZones,\"</div>\\n                <div class=\\\"stat-label\\\">Calm Zones</div>\\n            </div>\\n            <div class=\\\"stat-card\\\">\\n                <div class=\\\"stat-number\\\">\").concat(totalStressZones,\"</div>\\n                <div class=\\\"stat-label\\\">Stress Zones</div>\\n            </div>\\n        </div>\\n\\n        <h3>Mood Distribution</h3>\\n        <div class=\\\"mood-summary\\\">\\n            <div class=\\\"mood-item mood-calm\\\">\\n                <div class=\\\"mood-emoji\\\">\\uD83D\\uDE42</div>\\n                <div class=\\\"mood-percentage\\\">\").concat(overallCalmRate,\"%</div>\\n                <div>Calm</div>\\n            </div>\\n            <div class=\\\"mood-item mood-neutral\\\">\\n                <div class=\\\"mood-emoji\\\">\\uD83D\\uDE10</div>\\n                <div class=\\\"mood-percentage\\\">\").concat((100-parseFloat(overallCalmRate)-parseFloat(overallStressRate)).toFixed(1),\"%</div>\\n                <div>Neutral</div>\\n            </div>\\n            <div class=\\\"mood-item mood-stressed\\\">\\n                <div class=\\\"mood-emoji\\\">\\uD83D\\uDE1F</div>\\n                <div class=\\\"mood-percentage\\\">\").concat(overallStressRate,\"%</div>\\n                <div>Stressed</div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"section\\\">\\n        <h2>\\uD83C\\uDF3F Calm Zones</h2>\\n        \").concat(totalCalmZones===0?'<p style=\"text-align: center; color: #6b7280; font-style: italic;\">No calm zones identified yet. Continue logging walks to discover peaceful areas.</p>':\"<div class=\\\"zone-list\\\">\\n            \".concat(calmZones.map(zone=>\"\\n              <div class=\\\"zone-item zone-calm\\\">\\n                <div class=\\\"zone-score\\\">Calm Score: \".concat((zone.calmScore*100).toFixed(0),\"%</div>\\n                <div class=\\\"zone-details\\\">\\n                  Visits: \").concat(zone.visitCount,\"<br>\\n                  Last visited: \").concat(format(new Date(zone.lastVisited),'MMM dd, yyyy'),\"\\n                </div>\\n              </div>\\n            \")).join(''),\"\\n          </div>\"),\"\\n    </div>\\n\\n    <div class=\\\"section\\\">\\n        <h2>\\u26A0\\uFE0F Stress Zones</h2>\\n        \").concat(totalStressZones===0?'<p style=\"text-align: center; color: #6b7280; font-style: italic;\">No stress zones identified yet. This is great news!</p>':\"<div class=\\\"zone-list\\\">\\n            \".concat(stressZones.map(zone=>\"\\n              <div class=\\\"zone-item zone-stress\\\">\\n                <div class=\\\"zone-score\\\">Stress Score: \".concat((zone.stressScore*100).toFixed(0),\"%</div>\\n                <div class=\\\"zone-details\\\">\\n                  Stress instances: \").concat(zone.stressCount,\"<br>\\n                  Last stressed: \").concat(format(new Date(zone.lastStressed),'MMM dd, yyyy'),\"\\n                </div>\\n              </div>\\n            \")).join(''),\"\\n          </div>\"),\"\\n    </div>\\n\\n    <div class=\\\"section\\\">\\n        <h2>\\uD83D\\uDCC5 Recent Walk Sessions</h2>\\n        \").concat(sessions.length===0?'<p style=\"text-align: center; color: #6b7280; font-style: italic;\">No walk sessions recorded yet.</p>':sessions.sort((a,b)=>b.startTime-a.startTime).slice(0,10).map(session=>{const duration=session.endTime?(session.endTime-session.startTime)/60000:0;const total=session.moodEntries.length;const calmPct=total>0?(session.calmCount/total*100).toFixed(1):0;const stressedPct=total>0?(session.stressCount/total*100).toFixed(1):0;return\"\\n                <div class=\\\"session-item\\\">\\n                  <div class=\\\"session-date\\\">\".concat(format(new Date(session.startTime),'MMMM dd, yyyy - h:mm a'),\"</div>\\n                  <div class=\\\"session-stats\\\">\\n                    <span>Duration: \").concat(duration.toFixed(1),\" min</span>\\n                    <span>Entries: \").concat(total,\"</span>\\n                    <span>Calm: \").concat(calmPct,\"%</span>\\n                    <span>Stressed: \").concat(stressedPct,\"%</span>\\n                  </div>\\n                  \").concat(session.summary?\"<div style=\\\"margin-top: 10px; font-style: italic; color: #6b7280;\\\">\".concat(session.summary,\"</div>\"):'',\"\\n                </div>\\n              \");}).join(''),\"\\n    </div>\\n\\n    <div class=\\\"footer\\\">\\n        <p>This report was generated by Alzense - A geo-emotional mapping tool for Alzheimer's care.</p>\\n        <p>For more information, visit the Alzense application.</p>\\n    </div>\\n</body>\\n</html>\\n    \");};const handleShare=async()=>{if(navigator.share){try{const reportData=generateReport(StorageService.loadSessions(),StorageService.loadCalmZones(),StorageService.loadStressZones());const blob=new Blob([reportData],{type:'text/html'});const file=new File([blob],'alzense-report.html',{type:'text/html'});await navigator.share({title:'Alzense Care Report',text:'Care report generated by Alzense',files:[file]});}catch(error){console.error('Share failed:',error);alert('Sharing not supported or failed. Please use the download option.');}}else{alert('Sharing not supported on this device. Please use the download option.');}};const sessions=StorageService.loadSessions();const calmZones=StorageService.loadCalmZones();const stressZones=StorageService.loadStressZones();return/*#__PURE__*/_jsxs(\"div\",{className:\"page-content\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"page-title\",children:\"Export & Share Data\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(auto-fit, minmax(300px, 1fr))',gap:'2rem'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"card-title\",children:\"Export Data\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'1rem'},children:[/*#__PURE__*/_jsx(\"label\",{style:{display:'block',marginBottom:'0.5rem',fontWeight:'600'},children:\"Export Format\"}),/*#__PURE__*/_jsxs(\"select\",{value:exportFormat,onChange:e=>setExportFormat(e.target.value),style:{width:'100%',padding:'0.75rem',border:'1px solid #d1d5db',borderRadius:'8px',fontSize:'1rem'},children:[/*#__PURE__*/_jsx(\"option\",{value:\"report\",children:\"HTML Report (Recommended)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"json\",children:\"Raw Data (JSON)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"csv\",children:\"Sessions Data (CSV)\"})]})]}),/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'1rem'},children:/*#__PURE__*/_jsxs(\"p\",{style:{fontSize:'0.875rem',color:'#6b7280',marginBottom:'0.5rem'},children:[exportFormat==='report'&&'A comprehensive HTML report with statistics, charts, and insights.',exportFormat==='json'&&'Complete raw data in JSON format for technical analysis.',exportFormat==='csv'&&'Session data in CSV format for spreadsheet analysis.']})}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-primary\",onClick:handleExport,disabled:isExporting,style:{width:'100%',display:'flex',alignItems:'center',justifyContent:'center',gap:'0.5rem'},children:[/*#__PURE__*/_jsx(Download,{size:20}),isExporting?'Exporting...':'Download Export']})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"card-title\",children:\"Share Report\"}),/*#__PURE__*/_jsx(\"p\",{style:{marginBottom:'1rem',color:'#6b7280'},children:\"Share a care report with family members or healthcare providers.\"}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-secondary\",onClick:handleShare,style:{width:'100%',display:'flex',alignItems:'center',justifyContent:'center',gap:'0.5rem'},children:[/*#__PURE__*/_jsx(Share2,{size:20}),\"Share Report\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"card-title\",children:\"Data Summary\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',gap:'1rem'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"span\",{children:\"Total Walk Sessions\"}),/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:'600',color:'#3b82f6'},children:sessions.length})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"span\",{children:\"Calm Zones Identified\"}),/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:'600',color:'#4ade80'},children:calmZones.length})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"span\",{children:\"Stress Zones Identified\"}),/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:'600',color:'#ef4444'},children:stressZones.length})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"span\",{children:\"Total Mood Entries\"}),/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:'600',color:'#6b7280'},children:sessions.reduce((sum,session)=>sum+session.moodEntries.length,0)})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"card-title\",children:\"Privacy & Security\"}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'0.875rem',color:'#6b7280',lineHeight:'1.5'},children:[/*#__PURE__*/_jsxs(\"p\",{style:{marginBottom:'0.5rem'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Data Storage:\"}),\" All data is stored locally on your device and never sent to external servers.\"]}),/*#__PURE__*/_jsxs(\"p\",{style:{marginBottom:'0.5rem'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Sharing:\"}),\" Only share reports with trusted individuals. Reports contain location and mood data.\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Export:\"}),\" Downloaded files contain sensitive information. Store them securely.\"]})]})]})]})]});};export default ExportData;","map":{"version":3,"names":["React","useState","Download","Share2","StorageService","format","jsx","_jsx","jsxs","_jsxs","ExportData","isExporting","setIsExporting","exportFormat","setExportFormat","handleExport","data","exportData","sessions","loadSessions","calmZones","loadCalmZones","stressZones","loadStressZones","downloadFile","csvData","generateCSV","reportData","generateReport","error","console","alert","content","filename","mimeType","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","headers","rows","map","session","duration","endTime","startTime","total","moodEntries","length","calmPct","calmCount","toFixed","neutralPct","neutralCount","stressedPct","stressCount","avgNoise","reduce","sum","entry","noiseLevel","id","Date","summary","row","cell","concat","join","totalSessions","completedSessions","filter","s","totalCalmZones","totalStressZones","totalMoodEntries","totalCalmEntries","totalStressedEntries","overallCalmRate","overallStressRate","parseFloat","zone","calmScore","visitCount","lastVisited","stressScore","lastStressed","sort","a","b","slice","handleShare","navigator","share","file","File","title","text","files","className","children","style","display","gridTemplateColumns","gap","marginBottom","fontWeight","value","onChange","e","target","width","padding","border","borderRadius","fontSize","color","onClick","disabled","alignItems","justifyContent","size","flexDirection","lineHeight"],"sources":["C:/Users/usman/.cursor/alzense/src/components/ExportData.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Download, Share2 } from 'lucide-react';\r\nimport { StorageService } from '../services/storage';\r\nimport { format } from 'date-fns';\r\n\r\nconst ExportData: React.FC = () => {\r\n  const [isExporting, setIsExporting] = useState(false);\r\n  const [exportFormat, setExportFormat] = useState<'json' | 'csv' | 'report'>('report');\r\n\r\n  const handleExport = async () => {\r\n    setIsExporting(true);\r\n    \r\n    try {\r\n      const data = StorageService.exportData();\r\n      const sessions = StorageService.loadSessions();\r\n      const calmZones = StorageService.loadCalmZones();\r\n      const stressZones = StorageService.loadStressZones();\r\n      \r\n      if (exportFormat === 'json') {\r\n        downloadFile(data, 'alzense-data.json', 'application/json');\r\n      } else if (exportFormat === 'csv') {\r\n        const csvData = generateCSV(sessions);\r\n        downloadFile(csvData, 'alzense-sessions.csv', 'text/csv');\r\n      } else if (exportFormat === 'report') {\r\n        const reportData = generateReport(sessions, calmZones, stressZones);\r\n        downloadFile(reportData, 'alzense-report.html', 'text/html');\r\n      }\r\n    } catch (error) {\r\n      console.error('Export failed:', error);\r\n      alert('Export failed. Please try again.');\r\n    } finally {\r\n      setIsExporting(false);\r\n    }\r\n  };\r\n\r\n  const downloadFile = (content: string, filename: string, mimeType: string) => {\r\n    const blob = new Blob([content], { type: mimeType });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = filename;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const generateCSV = (sessions: any[]) => {\r\n    const headers = [\r\n      'Session ID',\r\n      'Start Time',\r\n      'End Time',\r\n      'Duration (minutes)',\r\n      'Total Entries',\r\n      'Calm Count',\r\n      'Neutral Count',\r\n      'Stressed Count',\r\n      'Calm Percentage',\r\n      'Neutral Percentage',\r\n      'Stressed Percentage',\r\n      'Average Noise Level',\r\n      'Summary'\r\n    ];\r\n\r\n    const rows = sessions.map(session => {\r\n      const duration = session.endTime ? (session.endTime - session.startTime) / 60000 : 0;\r\n      const total = session.moodEntries.length;\r\n      const calmPct = total > 0 ? (session.calmCount / total * 100).toFixed(1) : 0;\r\n      const neutralPct = total > 0 ? (session.neutralCount / total * 100).toFixed(1) : 0;\r\n      const stressedPct = total > 0 ? (session.stressCount / total * 100).toFixed(1) : 0;\r\n      const avgNoise = session.moodEntries.length > 0 \r\n        ? (session.moodEntries.reduce((sum: number, entry: any) => sum + entry.noiseLevel, 0) / session.moodEntries.length).toFixed(1)\r\n        : 0;\r\n\r\n      return [\r\n        session.id,\r\n        format(new Date(session.startTime), 'yyyy-MM-dd HH:mm:ss'),\r\n        session.endTime ? format(new Date(session.endTime), 'yyyy-MM-dd HH:mm:ss') : 'In Progress',\r\n        duration.toFixed(1),\r\n        total,\r\n        session.calmCount,\r\n        session.neutralCount,\r\n        session.stressCount,\r\n        calmPct,\r\n        neutralPct,\r\n        stressedPct,\r\n        avgNoise,\r\n        session.summary || ''\r\n      ];\r\n    });\r\n\r\n    return [headers, ...rows].map(row => row.map(cell => `\"${cell}\"`).join(',')).join('\\n');\r\n  };\r\n\r\n  const generateReport = (sessions: any[], calmZones: any[], stressZones: any[]) => {\r\n    const totalSessions = sessions.length;\r\n    const completedSessions = sessions.filter(s => s.endTime).length;\r\n    const totalCalmZones = calmZones.length;\r\n    const totalStressZones = stressZones.length;\r\n    \r\n    const totalMoodEntries = sessions.reduce((sum, session) => sum + session.moodEntries.length, 0);\r\n    const totalCalmEntries = sessions.reduce((sum, session) => sum + session.calmCount, 0);\r\n    const totalStressedEntries = sessions.reduce((sum, session) => sum + session.stressCount, 0);\r\n    \r\n    const overallCalmRate = totalMoodEntries > 0 ? (totalCalmEntries / totalMoodEntries * 100).toFixed(1) : '0';\r\n    const overallStressRate = totalMoodEntries > 0 ? (totalStressedEntries / totalMoodEntries * 100).toFixed(1) : '0';\r\n\r\n    return `\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Alzense Care Report</title>\r\n    <style>\r\n        body {\r\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;\r\n            line-height: 1.6;\r\n            color: #333;\r\n            max-width: 800px;\r\n            margin: 0 auto;\r\n            padding: 20px;\r\n            background-color: #f8fafc;\r\n        }\r\n        .header {\r\n            text-align: center;\r\n            margin-bottom: 40px;\r\n            padding: 30px;\r\n            background: linear-gradient(135deg, #4ade80, #3b82f6);\r\n            color: white;\r\n            border-radius: 12px;\r\n        }\r\n        .header h1 {\r\n            margin: 0;\r\n            font-size: 2.5rem;\r\n            font-weight: 700;\r\n        }\r\n        .header p {\r\n            margin: 10px 0 0 0;\r\n            font-size: 1.2rem;\r\n            opacity: 0.9;\r\n        }\r\n        .section {\r\n            background: white;\r\n            padding: 30px;\r\n            margin-bottom: 20px;\r\n            border-radius: 12px;\r\n            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\r\n        }\r\n        .section h2 {\r\n            color: #1e293b;\r\n            margin-bottom: 20px;\r\n            font-size: 1.5rem;\r\n            border-bottom: 2px solid #e5e7eb;\r\n            padding-bottom: 10px;\r\n        }\r\n        .stats-grid {\r\n            display: grid;\r\n            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n            gap: 20px;\r\n            margin-bottom: 20px;\r\n        }\r\n        .stat-card {\r\n            text-align: center;\r\n            padding: 20px;\r\n            background: #f8fafc;\r\n            border-radius: 8px;\r\n            border: 1px solid #e5e7eb;\r\n        }\r\n        .stat-number {\r\n            font-size: 2rem;\r\n            font-weight: 700;\r\n            color: #3b82f6;\r\n            margin-bottom: 5px;\r\n        }\r\n        .stat-label {\r\n            color: #6b7280;\r\n            font-size: 0.9rem;\r\n        }\r\n        .mood-summary {\r\n            display: flex;\r\n            justify-content: space-around;\r\n            margin: 20px 0;\r\n        }\r\n        .mood-item {\r\n            text-align: center;\r\n            padding: 15px;\r\n            border-radius: 8px;\r\n            min-width: 120px;\r\n        }\r\n        .mood-calm { background-color: #f0fdf4; color: #166534; }\r\n        .mood-neutral { background-color: #fffbeb; color: #92400e; }\r\n        .mood-stressed { background-color: #fef2f2; color: #991b1b; }\r\n        .mood-emoji { font-size: 2rem; margin-bottom: 10px; }\r\n        .mood-percentage { font-size: 1.5rem; font-weight: 700; }\r\n        .zone-list {\r\n            display: grid;\r\n            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n            gap: 15px;\r\n        }\r\n        .zone-item {\r\n            padding: 15px;\r\n            border-radius: 8px;\r\n            border: 1px solid #e5e7eb;\r\n        }\r\n        .zone-calm {\r\n            background-color: #f0fdf4;\r\n            border-color: #bbf7d0;\r\n        }\r\n        .zone-stress {\r\n            background-color: #fef2f2;\r\n            border-color: #fecaca;\r\n        }\r\n        .zone-score {\r\n            font-size: 1.2rem;\r\n            font-weight: 700;\r\n            margin-bottom: 5px;\r\n        }\r\n        .zone-details {\r\n            font-size: 0.9rem;\r\n            color: #6b7280;\r\n        }\r\n        .session-item {\r\n            padding: 15px;\r\n            border: 1px solid #e5e7eb;\r\n            border-radius: 8px;\r\n            margin-bottom: 10px;\r\n            background: #f8fafc;\r\n        }\r\n        .session-date {\r\n            font-weight: 600;\r\n            color: #1e293b;\r\n            margin-bottom: 5px;\r\n        }\r\n        .session-stats {\r\n            display: flex;\r\n            gap: 20px;\r\n            font-size: 0.9rem;\r\n            color: #6b7280;\r\n        }\r\n        .footer {\r\n            text-align: center;\r\n            margin-top: 40px;\r\n            padding: 20px;\r\n            color: #6b7280;\r\n            font-size: 0.9rem;\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n    <div class=\"header\">\r\n        <h1>🧠 Alzense Care Report</h1>\r\n        <p>Generated on ${format(new Date(), 'MMMM dd, yyyy')}</p>\r\n    </div>\r\n\r\n    <div class=\"section\">\r\n        <h2>📊 Overall Statistics</h2>\r\n        <div class=\"stats-grid\">\r\n            <div class=\"stat-card\">\r\n                <div class=\"stat-number\">${totalSessions}</div>\r\n                <div class=\"stat-label\">Total Walks</div>\r\n            </div>\r\n            <div class=\"stat-card\">\r\n                <div class=\"stat-number\">${completedSessions}</div>\r\n                <div class=\"stat-label\">Completed Walks</div>\r\n            </div>\r\n            <div class=\"stat-card\">\r\n                <div class=\"stat-number\">${totalMoodEntries}</div>\r\n                <div class=\"stat-label\">Mood Entries</div>\r\n            </div>\r\n            <div class=\"stat-card\">\r\n                <div class=\"stat-number\">${totalCalmZones}</div>\r\n                <div class=\"stat-label\">Calm Zones</div>\r\n            </div>\r\n            <div class=\"stat-card\">\r\n                <div class=\"stat-number\">${totalStressZones}</div>\r\n                <div class=\"stat-label\">Stress Zones</div>\r\n            </div>\r\n        </div>\r\n\r\n        <h3>Mood Distribution</h3>\r\n        <div class=\"mood-summary\">\r\n            <div class=\"mood-item mood-calm\">\r\n                <div class=\"mood-emoji\">🙂</div>\r\n                <div class=\"mood-percentage\">${overallCalmRate}%</div>\r\n                <div>Calm</div>\r\n            </div>\r\n            <div class=\"mood-item mood-neutral\">\r\n                <div class=\"mood-emoji\">😐</div>\r\n                <div class=\"mood-percentage\">${(100 - parseFloat(overallCalmRate) - parseFloat(overallStressRate)).toFixed(1)}%</div>\r\n                <div>Neutral</div>\r\n            </div>\r\n            <div class=\"mood-item mood-stressed\">\r\n                <div class=\"mood-emoji\">😟</div>\r\n                <div class=\"mood-percentage\">${overallStressRate}%</div>\r\n                <div>Stressed</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"section\">\r\n        <h2>🌿 Calm Zones</h2>\r\n        ${totalCalmZones === 0 ? \r\n          '<p style=\"text-align: center; color: #6b7280; font-style: italic;\">No calm zones identified yet. Continue logging walks to discover peaceful areas.</p>' :\r\n          `<div class=\"zone-list\">\r\n            ${calmZones.map(zone => `\r\n              <div class=\"zone-item zone-calm\">\r\n                <div class=\"zone-score\">Calm Score: ${(zone.calmScore * 100).toFixed(0)}%</div>\r\n                <div class=\"zone-details\">\r\n                  Visits: ${zone.visitCount}<br>\r\n                  Last visited: ${format(new Date(zone.lastVisited), 'MMM dd, yyyy')}\r\n                </div>\r\n              </div>\r\n            `).join('')}\r\n          </div>`\r\n        }\r\n    </div>\r\n\r\n    <div class=\"section\">\r\n        <h2>⚠️ Stress Zones</h2>\r\n        ${totalStressZones === 0 ? \r\n          '<p style=\"text-align: center; color: #6b7280; font-style: italic;\">No stress zones identified yet. This is great news!</p>' :\r\n          `<div class=\"zone-list\">\r\n            ${stressZones.map(zone => `\r\n              <div class=\"zone-item zone-stress\">\r\n                <div class=\"zone-score\">Stress Score: ${(zone.stressScore * 100).toFixed(0)}%</div>\r\n                <div class=\"zone-details\">\r\n                  Stress instances: ${zone.stressCount}<br>\r\n                  Last stressed: ${format(new Date(zone.lastStressed), 'MMM dd, yyyy')}\r\n                </div>\r\n              </div>\r\n            `).join('')}\r\n          </div>`\r\n        }\r\n    </div>\r\n\r\n    <div class=\"section\">\r\n        <h2>📅 Recent Walk Sessions</h2>\r\n        ${sessions.length === 0 ? \r\n          '<p style=\"text-align: center; color: #6b7280; font-style: italic;\">No walk sessions recorded yet.</p>' :\r\n          sessions\r\n            .sort((a, b) => b.startTime - a.startTime)\r\n            .slice(0, 10)\r\n            .map(session => {\r\n              const duration = session.endTime ? (session.endTime - session.startTime) / 60000 : 0;\r\n              const total = session.moodEntries.length;\r\n              const calmPct = total > 0 ? (session.calmCount / total * 100).toFixed(1) : 0;\r\n              const stressedPct = total > 0 ? (session.stressCount / total * 100).toFixed(1) : 0;\r\n              \r\n              return `\r\n                <div class=\"session-item\">\r\n                  <div class=\"session-date\">${format(new Date(session.startTime), 'MMMM dd, yyyy - h:mm a')}</div>\r\n                  <div class=\"session-stats\">\r\n                    <span>Duration: ${duration.toFixed(1)} min</span>\r\n                    <span>Entries: ${total}</span>\r\n                    <span>Calm: ${calmPct}%</span>\r\n                    <span>Stressed: ${stressedPct}%</span>\r\n                  </div>\r\n                  ${session.summary ? `<div style=\"margin-top: 10px; font-style: italic; color: #6b7280;\">${session.summary}</div>` : ''}\r\n                </div>\r\n              `;\r\n            }).join('')\r\n        }\r\n    </div>\r\n\r\n    <div class=\"footer\">\r\n        <p>This report was generated by Alzense - A geo-emotional mapping tool for Alzheimer's care.</p>\r\n        <p>For more information, visit the Alzense application.</p>\r\n    </div>\r\n</body>\r\n</html>\r\n    `;\r\n  };\r\n\r\n  const handleShare = async () => {\r\n    if (navigator.share) {\r\n      try {\r\n        const reportData = generateReport(\r\n          StorageService.loadSessions(),\r\n          StorageService.loadCalmZones(),\r\n          StorageService.loadStressZones()\r\n        );\r\n        \r\n        const blob = new Blob([reportData], { type: 'text/html' });\r\n        const file = new File([blob], 'alzense-report.html', { type: 'text/html' });\r\n        \r\n        await navigator.share({\r\n          title: 'Alzense Care Report',\r\n          text: 'Care report generated by Alzense',\r\n          files: [file]\r\n        });\r\n      } catch (error) {\r\n        console.error('Share failed:', error);\r\n        alert('Sharing not supported or failed. Please use the download option.');\r\n      }\r\n    } else {\r\n      alert('Sharing not supported on this device. Please use the download option.');\r\n    }\r\n  };\r\n\r\n  const sessions = StorageService.loadSessions();\r\n  const calmZones = StorageService.loadCalmZones();\r\n  const stressZones = StorageService.loadStressZones();\r\n\r\n  return (\r\n    <div className=\"page-content\">\r\n      <h1 className=\"page-title\">Export & Share Data</h1>\r\n\r\n      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', gap: '2rem' }}>\r\n        {/* Export Options */}\r\n        <div className=\"card\">\r\n          <h2 className=\"card-title\">Export Data</h2>\r\n          \r\n          <div style={{ marginBottom: '1rem' }}>\r\n            <label style={{ display: 'block', marginBottom: '0.5rem', fontWeight: '600' }}>\r\n              Export Format\r\n            </label>\r\n            <select\r\n              value={exportFormat}\r\n              onChange={(e) => setExportFormat(e.target.value as 'json' | 'csv' | 'report')}\r\n              style={{\r\n                width: '100%',\r\n                padding: '0.75rem',\r\n                border: '1px solid #d1d5db',\r\n                borderRadius: '8px',\r\n                fontSize: '1rem'\r\n              }}\r\n            >\r\n              <option value=\"report\">HTML Report (Recommended)</option>\r\n              <option value=\"json\">Raw Data (JSON)</option>\r\n              <option value=\"csv\">Sessions Data (CSV)</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div style={{ marginBottom: '1rem' }}>\r\n            <p style={{ fontSize: '0.875rem', color: '#6b7280', marginBottom: '0.5rem' }}>\r\n              {exportFormat === 'report' && 'A comprehensive HTML report with statistics, charts, and insights.'}\r\n              {exportFormat === 'json' && 'Complete raw data in JSON format for technical analysis.'}\r\n              {exportFormat === 'csv' && 'Session data in CSV format for spreadsheet analysis.'}\r\n            </p>\r\n          </div>\r\n\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={handleExport}\r\n            disabled={isExporting}\r\n            style={{ width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', gap: '0.5rem' }}\r\n          >\r\n            <Download size={20} />\r\n            {isExporting ? 'Exporting...' : 'Download Export'}\r\n          </button>\r\n        </div>\r\n\r\n        {/* Share Options */}\r\n        <div className=\"card\">\r\n          <h2 className=\"card-title\">Share Report</h2>\r\n          \r\n          <p style={{ marginBottom: '1rem', color: '#6b7280' }}>\r\n            Share a care report with family members or healthcare providers.\r\n          </p>\r\n\r\n          <button\r\n            className=\"btn btn-secondary\"\r\n            onClick={handleShare}\r\n            style={{ width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', gap: '0.5rem' }}\r\n          >\r\n            <Share2 size={20} />\r\n            Share Report\r\n          </button>\r\n        </div>\r\n\r\n        {/* Data Summary */}\r\n        <div className=\"card\">\r\n          <h2 className=\"card-title\">Data Summary</h2>\r\n          \r\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>\r\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n              <span>Total Walk Sessions</span>\r\n              <span style={{ fontWeight: '600', color: '#3b82f6' }}>{sessions.length}</span>\r\n            </div>\r\n            \r\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n              <span>Calm Zones Identified</span>\r\n              <span style={{ fontWeight: '600', color: '#4ade80' }}>{calmZones.length}</span>\r\n            </div>\r\n            \r\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n              <span>Stress Zones Identified</span>\r\n              <span style={{ fontWeight: '600', color: '#ef4444' }}>{stressZones.length}</span>\r\n            </div>\r\n            \r\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n              <span>Total Mood Entries</span>\r\n              <span style={{ fontWeight: '600', color: '#6b7280' }}>\r\n                {sessions.reduce((sum, session) => sum + session.moodEntries.length, 0)}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Privacy Notice */}\r\n        <div className=\"card\">\r\n          <h2 className=\"card-title\">Privacy & Security</h2>\r\n          \r\n          <div style={{ fontSize: '0.875rem', color: '#6b7280', lineHeight: '1.5' }}>\r\n            <p style={{ marginBottom: '0.5rem' }}>\r\n              <strong>Data Storage:</strong> All data is stored locally on your device and never sent to external servers.\r\n            </p>\r\n            <p style={{ marginBottom: '0.5rem' }}>\r\n              <strong>Sharing:</strong> Only share reports with trusted individuals. Reports contain location and mood data.\r\n            </p>\r\n            <p>\r\n              <strong>Export:</strong> Downloaded files contain sensitive information. Store them securely.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExportData;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}