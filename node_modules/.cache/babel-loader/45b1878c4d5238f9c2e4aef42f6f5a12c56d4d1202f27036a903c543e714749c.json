{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import{MapContainer,TileLayer,Marker,Popup,Circle,useMap}from'react-leaflet';import L from'leaflet';// import { GPSService } from '../services/gps';\n// import { AudioService } from '../services/audio';\nimport'leaflet/dist/leaflet.css';// Fix for default markers in react-leaflet\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";delete L.Icon.Default.prototype._getIconUrl;L.Icon.Default.mergeOptions({iconRetinaUrl:'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',iconUrl:'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',shadowUrl:'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'});// Component to center map on current location\nconst MapCenter=_ref=>{let{location}=_ref;const map=useMap();useEffect(()=>{if(location){map.setView([location.latitude,location.longitude],16);}},[location,map]);return null;};const MapView=_ref2=>{var _appState$currentLoca,_appState$currentSess;let{appState,onStartWalk,onEndWalk,onLogMood}=_ref2;const[mapCenter,setMapCenter]=useState([40.7128,-74.0060]);// Default to NYC\nconst mapRef=useRef(null);// Update map center when location changes\nuseEffect(()=>{if(appState.currentLocation){setMapCenter([appState.currentLocation.latitude,appState.currentLocation.longitude]);}},[appState.currentLocation]);// Get mood color for markers\nconst getMoodColor=mood=>{switch(mood){case'calm':return'#4ade80';case'neutral':return'#fbbf24';case'stressed':return'#ef4444';default:return'#6b7280';}};// Create custom markers\nconst createCustomIcon=mood=>{const color=getMoodColor(mood);return L.divIcon({className:'custom-marker',html:\"<div style=\\\"\\n        background-color: \".concat(color,\";\\n        width: 20px;\\n        height: 20px;\\n        border-radius: 50%;\\n        border: 3px solid white;\\n        box-shadow: 0 2px 4px rgba(0,0,0,0.3);\\n      \\\"></div>\"),iconSize:[20,20],iconAnchor:[10,10]});};// Get noise level description\nconst getNoiseDescription=noiseLevel=>{if(noiseLevel<30)return'Very Quiet';if(noiseLevel<40)return'Quiet';if(noiseLevel<50)return'Moderate';if(noiseLevel<60)return'Loud';if(noiseLevel<70)return'Very Loud';return'Extremely Loud';};const getNoiseClass=noiseLevel=>{if(noiseLevel<40)return'quiet';if(noiseLevel<60)return'moderate';return'loud';};return/*#__PURE__*/_jsxs(\"div\",{className:\"map-view\",children:[/*#__PURE__*/_jsxs(MapContainer,{center:mapCenter,zoom:16,style:{height:'100%',width:'100%'},ref:mapRef,children:[/*#__PURE__*/_jsx(TileLayer,{url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",attribution:\"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"}),/*#__PURE__*/_jsx(MapCenter,{location:appState.currentLocation}),appState.currentLocation&&/*#__PURE__*/_jsx(Marker,{position:[appState.currentLocation.latitude,appState.currentLocation.longitude],icon:L.divIcon({className:'current-location-marker',html:\"<div style=\\\"\\n                background-color: #3b82f6;\\n                width: 16px;\\n                height: 16px;\\n                border-radius: 50%;\\n                border: 3px solid white;\\n                box-shadow: 0 2px 4px rgba(0,0,0,0.3);\\n                animation: pulse 2s infinite;\\n              \\\"></div>\",iconSize:[16,16],iconAnchor:[8,8]}),children:/*#__PURE__*/_jsx(Popup,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Current Location\"}),/*#__PURE__*/_jsx(\"br\",{}),\"Accuracy: \",(_appState$currentLoca=appState.currentLocation.accuracy)===null||_appState$currentLoca===void 0?void 0:_appState$currentLoca.toFixed(0),\"m\"]})})}),(_appState$currentSess=appState.currentSession)===null||_appState$currentSess===void 0?void 0:_appState$currentSess.moodEntries.map(entry=>/*#__PURE__*/_jsx(Marker,{position:[entry.location.latitude,entry.location.longitude],icon:createCustomIcon(entry.mood),children:/*#__PURE__*/_jsx(Popup,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"strong\",{children:[\"Mood: \",entry.mood]}),/*#__PURE__*/_jsx(\"br\",{}),\"Noise: \",getNoiseDescription(entry.noiseLevel),\" (\",entry.noiseLevel.toFixed(0),\"dB)\",/*#__PURE__*/_jsx(\"br\",{}),\"Time: \",new Date(entry.timestamp).toLocaleTimeString()]})})},entry.id)),appState.calmZones.map(zone=>/*#__PURE__*/_jsx(Circle,{center:[zone.center.latitude,zone.center.longitude],radius:zone.radius,pathOptions:{color:'#4ade80',fillColor:'#4ade80',fillOpacity:0.2,weight:2},children:/*#__PURE__*/_jsx(Popup,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Calm Zone\"}),/*#__PURE__*/_jsx(\"br\",{}),\"Calm Score: \",(zone.calmScore*100).toFixed(0),\"%\",/*#__PURE__*/_jsx(\"br\",{}),\"Visits: \",zone.visitCount]})})},zone.id)),appState.stressZones.map(zone=>/*#__PURE__*/_jsx(Circle,{center:[zone.center.latitude,zone.center.longitude],radius:zone.radius,pathOptions:{color:'#ef4444',fillColor:'#ef4444',fillOpacity:0.2,weight:2},children:/*#__PURE__*/_jsx(Popup,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Stress Zone\"}),/*#__PURE__*/_jsx(\"br\",{}),\"Stress Score: \",(zone.stressScore*100).toFixed(0),\"%\",/*#__PURE__*/_jsx(\"br\",{}),\"Stress Count: \",zone.stressCount]})})},zone.id))]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-indicator \".concat(appState.isTracking?'tracking':'not-tracking'),children:[/*#__PURE__*/_jsx(\"div\",{className:\"status-dot \".concat(appState.isTracking?'tracking':'not-tracking')}),appState.isTracking?'Tracking Walk':'Not Tracking']}),appState.isRecordingAudio&&/*#__PURE__*/_jsxs(\"div\",{className:\"noise-indicator\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"noise-level \".concat(getNoiseClass(appState.currentNoiseLevel)),children:[appState.currentNoiseLevel.toFixed(0),\"dB\"]}),/*#__PURE__*/_jsx(\"div\",{children:getNoiseDescription(appState.currentNoiseLevel)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"session-controls\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"session-status \".concat(appState.isTracking?'tracking':'not-tracking'),children:appState.isTracking?'Walk in Progress':'Ready to Start Walk'}),appState.isTracking?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mood-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"mood-button calm\",onClick:()=>onLogMood('calm'),disabled:!appState.currentLocation,children:\"\\uD83D\\uDE42 Calm\"}),/*#__PURE__*/_jsx(\"button\",{className:\"mood-button neutral\",onClick:()=>onLogMood('neutral'),disabled:!appState.currentLocation,children:\"\\uD83D\\uDE10 Neutral\"}),/*#__PURE__*/_jsx(\"button\",{className:\"mood-button stressed\",onClick:()=>onLogMood('stressed'),disabled:!appState.currentLocation,children:\"\\uD83D\\uDE1F Stressed\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"session-buttons\",children:/*#__PURE__*/_jsx(\"button\",{className:\"session-button danger\",onClick:onEndWalk,children:\"End Walk\"})})]}):/*#__PURE__*/_jsx(\"div\",{className:\"session-buttons\",children:/*#__PURE__*/_jsx(\"button\",{className:\"session-button primary\",onClick:onStartWalk,children:\"Start Walk\"})}),appState.currentSession&&/*#__PURE__*/_jsxs(\"div\",{className:\"session-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"Calm: \",appState.currentSession.calmCount]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Neutral: \",appState.currentSession.neutralCount]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Stressed: \",appState.currentSession.stressCount]})]})]})]});};export default MapView;","map":{"version":3,"names":["React","useEffect","useRef","useState","MapContainer","TileLayer","Marker","Popup","Circle","useMap","L","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","MapCenter","_ref","location","map","setView","latitude","longitude","MapView","_ref2","_appState$currentLoca","_appState$currentSess","appState","onStartWalk","onEndWalk","onLogMood","mapCenter","setMapCenter","mapRef","currentLocation","getMoodColor","mood","createCustomIcon","color","divIcon","className","html","concat","iconSize","iconAnchor","getNoiseDescription","noiseLevel","getNoiseClass","children","center","zoom","style","height","width","ref","url","attribution","position","icon","accuracy","toFixed","currentSession","moodEntries","entry","Date","timestamp","toLocaleTimeString","id","calmZones","zone","radius","pathOptions","fillColor","fillOpacity","weight","calmScore","visitCount","stressZones","stressScore","stressCount","isTracking","isRecordingAudio","currentNoiseLevel","onClick","disabled","calmCount","neutralCount"],"sources":["C:/Users/usman/.cursor/alzense/src/components/MapView.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, Circle, useMap } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport { AppState, Mood, Location } from '../types';\r\n// import { GPSService } from '../services/gps';\r\n// import { AudioService } from '../services/audio';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\n// Fix for default markers in react-leaflet\r\ndelete (L.Icon.Default.prototype as any)._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\r\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\r\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\r\n});\r\n\r\ninterface MapViewProps {\r\n  appState: AppState;\r\n  onStartWalk: () => void;\r\n  onEndWalk: () => void;\r\n  onLogMood: (mood: Mood) => void;\r\n}\r\n\r\n// Component to center map on current location\r\nconst MapCenter: React.FC<{ location: Location | null }> = ({ location }) => {\r\n  const map = useMap();\r\n  \r\n  useEffect(() => {\r\n    if (location) {\r\n      map.setView([location.latitude, location.longitude], 16);\r\n    }\r\n  }, [location, map]);\r\n  \r\n  return null;\r\n};\r\n\r\nconst MapView: React.FC<MapViewProps> = ({ appState, onStartWalk, onEndWalk, onLogMood }) => {\r\n  const [mapCenter, setMapCenter] = useState<[number, number]>([40.7128, -74.0060]); // Default to NYC\r\n  const mapRef = useRef<L.Map>(null);\r\n\r\n  // Update map center when location changes\r\n  useEffect(() => {\r\n    if (appState.currentLocation) {\r\n      setMapCenter([appState.currentLocation.latitude, appState.currentLocation.longitude]);\r\n    }\r\n  }, [appState.currentLocation]);\r\n\r\n  // Get mood color for markers\r\n  const getMoodColor = (mood: Mood): string => {\r\n    switch (mood) {\r\n      case 'calm': return '#4ade80';\r\n      case 'neutral': return '#fbbf24';\r\n      case 'stressed': return '#ef4444';\r\n      default: return '#6b7280';\r\n    }\r\n  };\r\n\r\n  // Create custom markers\r\n  const createCustomIcon = (mood: Mood) => {\r\n    const color = getMoodColor(mood);\r\n    return L.divIcon({\r\n      className: 'custom-marker',\r\n      html: `<div style=\"\r\n        background-color: ${color};\r\n        width: 20px;\r\n        height: 20px;\r\n        border-radius: 50%;\r\n        border: 3px solid white;\r\n        box-shadow: 0 2px 4px rgba(0,0,0,0.3);\r\n      \"></div>`,\r\n      iconSize: [20, 20],\r\n      iconAnchor: [10, 10]\r\n    });\r\n  };\r\n\r\n  // Get noise level description\r\n  const getNoiseDescription = (noiseLevel: number): string => {\r\n    if (noiseLevel < 30) return 'Very Quiet';\r\n    if (noiseLevel < 40) return 'Quiet';\r\n    if (noiseLevel < 50) return 'Moderate';\r\n    if (noiseLevel < 60) return 'Loud';\r\n    if (noiseLevel < 70) return 'Very Loud';\r\n    return 'Extremely Loud';\r\n  };\r\n\r\n  const getNoiseClass = (noiseLevel: number): string => {\r\n    if (noiseLevel < 40) return 'quiet';\r\n    if (noiseLevel < 60) return 'moderate';\r\n    return 'loud';\r\n  };\r\n\r\n  return (\r\n    <div className=\"map-view\">\r\n      <MapContainer\r\n        center={mapCenter}\r\n        zoom={16}\r\n        style={{ height: '100%', width: '100%' }}\r\n        ref={mapRef}\r\n      >\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        \r\n        <MapCenter location={appState.currentLocation} />\r\n        \r\n        {/* Current location marker */}\r\n        {appState.currentLocation && (\r\n          <Marker\r\n            position={[appState.currentLocation.latitude, appState.currentLocation.longitude]}\r\n            icon={L.divIcon({\r\n              className: 'current-location-marker',\r\n              html: `<div style=\"\r\n                background-color: #3b82f6;\r\n                width: 16px;\r\n                height: 16px;\r\n                border-radius: 50%;\r\n                border: 3px solid white;\r\n                box-shadow: 0 2px 4px rgba(0,0,0,0.3);\r\n                animation: pulse 2s infinite;\r\n              \"></div>`,\r\n              iconSize: [16, 16],\r\n              iconAnchor: [8, 8]\r\n            })}\r\n          >\r\n            <Popup>\r\n              <div>\r\n                <strong>Current Location</strong>\r\n                <br />\r\n                Accuracy: {appState.currentLocation.accuracy?.toFixed(0)}m\r\n              </div>\r\n            </Popup>\r\n          </Marker>\r\n        )}\r\n\r\n        {/* Current session mood entries */}\r\n        {appState.currentSession?.moodEntries.map((entry) => (\r\n          <Marker\r\n            key={entry.id}\r\n            position={[entry.location.latitude, entry.location.longitude]}\r\n            icon={createCustomIcon(entry.mood)}\r\n          >\r\n            <Popup>\r\n              <div>\r\n                <strong>Mood: {entry.mood}</strong>\r\n                <br />\r\n                Noise: {getNoiseDescription(entry.noiseLevel)} ({entry.noiseLevel.toFixed(0)}dB)\r\n                <br />\r\n                Time: {new Date(entry.timestamp).toLocaleTimeString()}\r\n              </div>\r\n            </Popup>\r\n          </Marker>\r\n        ))}\r\n\r\n        {/* Calm zones */}\r\n        {appState.calmZones.map((zone) => (\r\n          <Circle\r\n            key={zone.id}\r\n            center={[zone.center.latitude, zone.center.longitude]}\r\n            radius={zone.radius}\r\n            pathOptions={{\r\n              color: '#4ade80',\r\n              fillColor: '#4ade80',\r\n              fillOpacity: 0.2,\r\n              weight: 2\r\n            }}\r\n          >\r\n            <Popup>\r\n              <div>\r\n                <strong>Calm Zone</strong>\r\n                <br />\r\n                Calm Score: {(zone.calmScore * 100).toFixed(0)}%\r\n                <br />\r\n                Visits: {zone.visitCount}\r\n              </div>\r\n            </Popup>\r\n          </Circle>\r\n        ))}\r\n\r\n        {/* Stress zones */}\r\n        {appState.stressZones.map((zone) => (\r\n          <Circle\r\n            key={zone.id}\r\n            center={[zone.center.latitude, zone.center.longitude]}\r\n            radius={zone.radius}\r\n            pathOptions={{\r\n              color: '#ef4444',\r\n              fillColor: '#ef4444',\r\n              fillOpacity: 0.2,\r\n              weight: 2\r\n            }}\r\n          >\r\n            <Popup>\r\n              <div>\r\n                <strong>Stress Zone</strong>\r\n                <br />\r\n                Stress Score: {(zone.stressScore * 100).toFixed(0)}%\r\n                <br />\r\n                Stress Count: {zone.stressCount}\r\n              </div>\r\n            </Popup>\r\n          </Circle>\r\n        ))}\r\n      </MapContainer>\r\n\r\n      {/* Status indicators */}\r\n      <div className={`status-indicator ${appState.isTracking ? 'tracking' : 'not-tracking'}`}>\r\n        <div className={`status-dot ${appState.isTracking ? 'tracking' : 'not-tracking'}`}></div>\r\n        {appState.isTracking ? 'Tracking Walk' : 'Not Tracking'}\r\n      </div>\r\n\r\n      {appState.isRecordingAudio && (\r\n        <div className=\"noise-indicator\">\r\n          <div className={`noise-level ${getNoiseClass(appState.currentNoiseLevel)}`}>\r\n            {appState.currentNoiseLevel.toFixed(0)}dB\r\n          </div>\r\n          <div>{getNoiseDescription(appState.currentNoiseLevel)}</div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Session controls */}\r\n      <div className=\"session-controls\">\r\n        <div className={`session-status ${appState.isTracking ? 'tracking' : 'not-tracking'}`}>\r\n          {appState.isTracking ? 'Walk in Progress' : 'Ready to Start Walk'}\r\n        </div>\r\n\r\n        {appState.isTracking ? (\r\n          <>\r\n            <div className=\"mood-buttons\">\r\n              <button\r\n                className=\"mood-button calm\"\r\n                onClick={() => onLogMood('calm')}\r\n                disabled={!appState.currentLocation}\r\n              >\r\n                🙂 Calm\r\n              </button>\r\n              <button\r\n                className=\"mood-button neutral\"\r\n                onClick={() => onLogMood('neutral')}\r\n                disabled={!appState.currentLocation}\r\n              >\r\n                😐 Neutral\r\n              </button>\r\n              <button\r\n                className=\"mood-button stressed\"\r\n                onClick={() => onLogMood('stressed')}\r\n                disabled={!appState.currentLocation}\r\n              >\r\n                😟 Stressed\r\n              </button>\r\n            </div>\r\n            <div className=\"session-buttons\">\r\n              <button className=\"session-button danger\" onClick={onEndWalk}>\r\n                End Walk\r\n              </button>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className=\"session-buttons\">\r\n            <button className=\"session-button primary\" onClick={onStartWalk}>\r\n              Start Walk\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {appState.currentSession && (\r\n          <div className=\"session-stats\">\r\n            <div>Calm: {appState.currentSession.calmCount}</div>\r\n            <div>Neutral: {appState.currentSession.neutralCount}</div>\r\n            <div>Stressed: {appState.currentSession.stressCount}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}